#include <SoftwareSerial.h>
#include <dht11.h>
#define RX 2
#define TX 3
#define dht_apin A2 // Analog Pin sensor is connected to
dht11 dhtObject;
String AP = "UR";       // AP NAME
String PASS = "ravi2001"; // AP PASSWORD
String API = "CK7VI3KOS2KD2RMX";   // Write API KEY
String HOST = "api.thingspeak.com";
String PORT = "80";
int countTrueCommand;
int countTimeCommand;
int msensor = A1;
int msvalue = 0;
boolean found = false;
int valSensor = 1;
int sensorvalue;

SoftwareSerial esp8266(RX, TX);

void setup() {
  Serial.begin(9600);
  esp8266.begin(115200);
  sendCommand("AT", 5, "OK");
  sendCommand("AT+CWMODE=1", 5, "OK");
  sendCommand("AT+CWJAP=\"" + AP + "\",\"" + PASS + "\"", 20, "OK");
}

void loop() {

  String getData = "GET /update?api_key=" + API + "&field1=" + getTemperatureValue() + "&field2=" + getHumidityValue()+"&field3=" + getsoilmoisturevalue()+"&field4=" + getuvradiationvalue();
  sendCommand("AT+CIPMUX=1", 5, "OK");
  sendCommand("AT+CIPSTART=0,\"TCP\",\"" + HOST + "\"," + PORT, 15, "OK");
  sendCommand("AT+CIPSEND=0," + String(getData.length() + 4), 4, ">");
  esp8266.println(getData); delay(1500); countTrueCommand++;
  sendCommand("AT+CIPCLOSE=0", 5, "OK");
}


String getTemperatureValue() {

  dhtObject.read(dht_apin);
  Serial.print(" Temperature(C)= ");
  int temp = dhtObject.temperature;
  Serial.println(temp);
  delay(50);
  return String(temp);

}


String getHumidityValue() {

  dhtObject.read(dht_apin);
  Serial.print(" Humidity in %= ");
  int humidity = dhtObject.humidity;
  Serial.println(humidity);
  delay(50);
  return String(humidity);

}
int getsoilmoisturevalue() {
  msvalue = analogRead(msensor);
  Serial.println(msvalue);
  delay(1000);
  return int(msvalue);
}
int getuvradiationvalue(){
  sensorvalue=analogRead(36);
  Serial.println(sensorvalue);
  delay(1000);
  return int(sensorvalue);
}

void sendCommand(String command, int maxTime, char readReplay[]) {
  Serial.print(countTrueCommand);
  Serial.print(". at command => ");
  Serial.print(command);
  Serial.print(" ");
  while (countTimeCommand < (maxTime * 1))
  {
    esp8266.println(command);//at+cipsend
    if (esp8266.find(readReplay)) //ok
    {
      found = true;
      break;
    }

    countTimeCommand++;
  }

  if (found == true)
  {
    Serial.println("Ok");
    countTrueCommand++;
    countTimeCommand = 0;
  }

  if (found == false)
  {
    Serial.println("Fail");
    countTrueCommand = 0;
    countTimeCommand = 0;
  }

  found = false;
}